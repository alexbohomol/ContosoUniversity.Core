name: Pull Request Checks

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOTNET_VERSION: 6.0.x

jobs:

  build_and_unit_testing:
    name: Build and Unit Testing
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Build Solution
      run: |
        dotnet restore
        dotnet build --no-restore
      
    - name: Run Unit Tests
      working-directory: test/unit/ContosoUniversity.Domain.Tests
      run: dotnet test --no-build --verbosity normal
      
  code_style_checks:
    name: Code style checks
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Build Solution
      run: |
        dotnet restore
        dotnet build --no-restore
      
    - name: Dotnet Format Checks (Whitespaces)
      run: |
        dotnet format whitespace \
        --no-restore \
        --exclude ./src/*/Migrations \
        --verify-no-changes
      
    - name: Dotnet Format Checks (Style)
      run: |
        dotnet format style \
        --no-restore \
        --exclude ./src/*/Migrations \
        --verify-no-changes
      
    - name: Dotnet Format Checks (Analizers)
      run: |
        dotnet format analyzers \
        --no-restore \
        --exclude ./src/*/Migrations \
        --verify-no-changes
      
  integration_testing:
    name: Integration Testing
    runs-on: ubuntu-latest
    services:
      cudb:
        image: mcr.microsoft.com/mssql/server
        env:
          ACCEPT_EULA: "Y"
          SA_PASSWORD: <YourStrong!Passw0rd>
        ports:
          - 1433:1433
        volumes:
          - sqlvolume:/var/opt/mssql
        options: >-
          --name cudb
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # - run: docker container list
    # - run: docker container inspect cudb
    # - run: docker network list
    
    # - name: Resolve container network
    #   run: docker inspect cudb --format '{{range $key, $_ := .NetworkSettings.Networks}}{{$key}}{{end}}'
      
    - name: Resolve container network
      id: get_network
      run: |
        echo "network=$(docker inspect cudb --format '{{range $key, $_ := .NetworkSettings.Networks}}{{$key}}{{end}}')" >> "$GITHUB_OUTPUT"
        
    - name: Init container database
      run: |
        docker run --rm \
        --entrypoint /opt/mssql-tools/bin/sqlcmd \
        --workdir /scripts \
        --volume "$(pwd)"/database:/scripts \
        --network ${{ steps.get_network.outputs.network }} \
        mcr.microsoft.com/mssql-tools \
        -S cudb -U SA -P "<YourStrong!Passw0rd>" -i "db-init.sql"
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
      
    - name: Build Integration Tests
      working-directory: test/integration/ContosoUniversity.Mvc.IntegrationTests
      run: |
        dotnet restore
        dotnet build --no-restore
      
    - name: Run Integration Tests
      working-directory: test/integration/ContosoUniversity.Mvc.IntegrationTests
      run: |
        dotnet test --no-build --verbosity normal
      
  e2e_testing:
    name: E2E Testing (Playwright)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    # a lot of fun stuff...