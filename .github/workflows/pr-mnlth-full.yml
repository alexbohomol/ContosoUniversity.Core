name: MNLTH / PR Full Checks

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  DOTNET_VERSION: 9.0.x

jobs:

  build_and_save_image:
    name: Build & Save Image
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ vars.MONOLITH_SLN_PATH }}/src/ContosoUniversity.Mvc

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Developer Cert
        run: |
          dotnet dev-certs https -ep cert.pfx -p Test1234!
          ls -lah

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image locally
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ${{ vars.MONOLITH_SLN_PATH }}
          file: ${{ vars.MONOLITH_SLN_PATH }}/src/ContosoUniversity.Mvc/Dockerfile
          tags: cuweb:latest
          outputs: type=docker,dest=${{ runner.temp }}/cuweb.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cuweb
          path: ${{ runner.temp }}/cuweb.tar

  check_system_health:
    name: Check System Health
    runs-on: ubuntu-latest
    needs: build_and_save_image
    defaults:
      run:
        working-directory: ${{ vars.MONOLITH_SLN_PATH }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: cuweb
          path: ${{ runner.temp }}

      - name: Load image
        run: |
          docker load --input ${{ runner.temp }}/cuweb.tar
          docker image ls -a

      - name: Run Docker Compose Up
        run: |
          docker compose up --wait

      - name: List Docker images
        run: docker image ls --all

      - name: List Docker containers
        run: docker container ls --all

      - name: Inspect container | cuweb
        run: docker inspect cuweb

      - name: Curl to cuweb
        run: curl http://localhost:10000/Courses

      - name: Grab container logs | cuweb
        if: always()
        run: docker logs cuweb

      - name: Grab container logs | mssql
        if: always()
        run: docker logs mssql

      - name: Grab container logs | mssql-migrator
        if: always()
        run: docker logs mssql-migrator

      - name: Shut down Docker Infra
        run: docker compose down

  system_testing:
    name: System Testing / External-Process
    runs-on: ubuntu-latest
    needs: check_system_health
    env:
      TEST_PROJ_PATH: ${{ vars.MONOLITH_SLN_PATH }}/test/system/ContosoUniversity.SystemTests

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Docker Compose
      run: sudo curl -L "https://github.com/docker/compose/releases/download/v2.11.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    - name: Set Permissions
      run: sudo chmod +x /usr/local/bin/docker-compose

    - name: Inspect Docker Environment
      run: |
        docker version
        docker compose version
        docker-compose version
        ls -lah

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: cuweb
        path: ${{ runner.temp }}

    - name: Load image
      run: |
        docker load --input ${{ runner.temp }}/cuweb.tar
        docker image ls -a

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Build System Tests
      working-directory: ${{ env.TEST_PROJ_PATH }}
      run: |
        dotnet restore
        dotnet build --no-restore

    - name: Ensure browsers are installed
      working-directory: ${{ env.TEST_PROJ_PATH }}
      run: pwsh bin/Debug/net9.0/playwright.ps1 install --with-deps

    - name: Run System Tests
      working-directory: ${{ env.TEST_PROJ_PATH }}
      run: |
        dotnet test --no-build --verbosity normal

  e2e_testing:
    name: E2E Testing / External-Process
    runs-on: ubuntu-latest
    needs: check_system_health
    env:
      TEST_PROJ_PATH: ${{ vars.MONOLITH_SLN_PATH }}/test/e2e/ContosoUniversity.AcceptanceTests

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Docker Compose
      run: sudo curl -L "https://github.com/docker/compose/releases/download/v2.11.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    - name: Set Permissions
      run: sudo chmod +x /usr/local/bin/docker-compose

    - name: Inspect Docker Environment
      run: |
        docker version
        docker compose version
        docker-compose version
        ls -lah

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: cuweb
        path: ${{ runner.temp }}

    - name: Load image
      run: |
        docker load --input ${{ runner.temp }}/cuweb.tar
        docker image ls -a

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Build Acceptance Tests
      working-directory: ${{ env.TEST_PROJ_PATH }}
      run: |
        dotnet restore
        dotnet build --no-restore

    - name: Ensure browsers are installed
      working-directory: ${{ env.TEST_PROJ_PATH }}
      run: pwsh bin/Debug/net9.0/playwright.ps1 install --with-deps

    - name: Run Acceptance Tests
      working-directory: ${{ env.TEST_PROJ_PATH }}
      run: |
        dotnet test --no-build --verbosity normal
